Документация Проекта "Smart-Home Sensor System"
Общее описание
Проект "Smart-Home Sensor System" представляет собой веб-приложение для мониторинга температуры с использованием датчиков. Оно разработано с использованием Flask и Express.js и включает в себя передовые функции для сбора, обработки и визуализации данных с датчиков.

Компоненты системы
app.py (Flask Backend)

Основная серверная часть, разработанная на Flask.
Предоставляет веб-интерфейс для отображения данных с датчиков.
Обновляет и хранит данные температуры в реальном времени.
Рендерит главную страницу и предоставляет JSON API для обновления данных.
index.html (Frontend)

Отображает пользовательский интерфейс веб-приложения.
Включает в себя динамическое обновление показаний датчиков и визуализацию данных с помощью библиотеки Plotly.js.
Sensor.js (Node.js Module)

Определяет базовый класс Sensor для обработки данных датчиков.
Модуль может быть расширен для включения дополнительных типов датчиков.
Temp.js (Temperature Sensor Module)

Расширяет класс Sensor для работы с температурными датчиками.
Симулирует сбор данных о температуре.
index.js (Express.js Server)

Серверная часть на Express.js, предназначенная для обработки данных с температурных датчиков.
Обеспечивает API для получения текущих данных о температуре.
Основные функции
Обновление и отображение данных с датчиков в реальном времени

Веб-приложение демонстрирует текущие показания температуры с каждого датчика и обновляет их автоматически.
Визуализация истории температуры

Использует Plotly.js для отображения графиков изменения температуры во времени.
Модульность и расширяемость

Проект структурирован таким образом, что новые типы датчиков и функциональность могут быть легко добавлены.
Технологический стек
Backend: Python (Flask), JavaScript (Node.js, Express.js)
Frontend: HTML, JavaScript (Plotly.js)
Коммуникации: HTTP, JSON
Запуск проекта
Установите необходимые зависимости через pip и npm.
Запустите Flask сервер (app.py) и Express.js сервер (index.js).
Откройте веб-страницу (index.html) через браузер.
Важные замечания
Убедитесь, что все компоненты системы корректно настроены и могут взаимодействовать друг с другом.
Для более глубокой настройки и расширения функциональности рекомендуется ознакомиться с документацией используемых библиотек и фреймворков.